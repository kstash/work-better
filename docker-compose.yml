version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: work-better-postgres
    environment:
      POSTGRES_USER: #postgres_user_name
      POSTGRES_PASSWORD: #postgres_user_password
      POSTGRES_DB: #postgres_db_name
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:7
    container_name: work-better-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: #mongodb_root_user_name
      MONGO_INITDB_ROOT_PASSWORD: #mongodb_root_user_password
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data:/data/db
      - ./docker/init/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://mongodb:mongodb@localhost:27017/admin --quiet
      interval: 10s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7
    container_name: work-better-redis
    command: redis-server --requirepass redis
    environment:
      - REDIS_PASSWORD= #redis_password
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', '-a', 'redis', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    name: work-better-postgres-data
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/docker/volumes/postgres

  mongodb_data:
    name: work-better-mongodb-data
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/docker/volumes/mongodb

  redis_data:
    name: work-better-redis-data
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/docker/volumes/redis
